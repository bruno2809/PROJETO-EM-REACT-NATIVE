{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bruno Araujo\\\\Desktop\\\\ProjetodaAV1\\\\PROJETO EM REACT\\\\src\\\\page\\\\Produtos\\\\AddProduto.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport styles from \"../../estilos/estilosadd\";\n\nvar AddProduto = function AddProduto(props) {\n  var initialProdutoState = {\n    name: \"\",\n    codigo: \"\",\n    fornecedor: \"\",\n    preco: \"\"\n  };\n\n  var _useState = useState(initialProdutoState),\n      _useState2 = _slicedToArray(_useState, 2),\n      produto = _useState2[0],\n      setProduto = _useState2[1];\n\n  var isOpen = props.isOpen,\n      closeModal = props.closeModal;\n\n  var handleChange = function handleChange(value, name) {\n    setProduto(_objectSpread(_objectSpread({}, produto), {}, _defineProperty({}, name, value)));\n  };\n\n  var addProduto = function addProduto() {\n    return _regeneratorRuntime.async(function addProduto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            props.addProduto(produto);\n            props.closeModal();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Modal, {\n    visible: isOpen,\n    onRequestClose: closeModal,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Cadastrar Produto \"), React.createElement(TextInput, {\n    placeholder: \"Nome do Produto: \",\n    style: styles.textBox,\n    onChangeText: function onChangeText(text) {\n      return handleChange(text, \"name\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \" C\\xF3digo do Produto: \",\n    style: styles.textBox,\n    onChangeText: function onChangeText(text) {\n      return handleChange(text, \"codigo\");\n    },\n    keyboardType: \"numeric\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \" Fornecedor do Produto: \",\n    style: styles.textBox,\n    onChangeText: function onChangeText(text) {\n      return handleChange(text, \"fornecedor\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Preco do Produto: \",\n    style: styles.textBox,\n    onChangeText: function onChangeText(text) {\n      return handleChange(text, \"preco\");\n    },\n    keyboardType: \"numeric\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: addProduto,\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      marginVertical: 0\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Salvar\")), React.createElement(TouchableOpacity, {\n    onPress: closeModal,\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      marginVertical: 0,\n      marginLeft: 10,\n      backgroundColor: \"tomato\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Cancelar\")))));\n};\n\nexport default AddProduto;","map":{"version":3,"sources":["C:/Users/Bruno Araujo/Desktop/ProjetodaAV1/PROJETO EM REACT/src/page/Produtos/AddProduto.js"],"names":["React","useState","AsyncStorage","TextInput","styles","AddProduto","props","initialProdutoState","name","codigo","fornecedor","preco","produto","setProduto","isOpen","closeModal","handleChange","value","addProduto","container","title","textBox","text","buttonContainer","button","marginVertical","buttonText","marginLeft","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Modal, TouchableOpacity, AsyncStorage } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport styles from '../../estilos/estilosadd'\n\nconst AddProduto = (props) => {\n  const initialProdutoState = {\n    name: \"\",\n    codigo: \"\",\n    fornecedor: \"\",\n    preco:\"\"\n  }\n\n  const [produto, setProduto] = useState(initialProdutoState)\n  const { isOpen, closeModal } = props\n\n  const handleChange = (value, name) => {\n    setProduto( {...produto, [name]: value})\n  }\n\n  const addProduto = async () => {\n    props.addProduto(produto) \n    props.closeModal();\n\n  }\n\n  return(\n    <Modal\n        visible={isOpen}\n        onRequestClose={closeModal}\n        animationType=\"slide\"\n    >\n        <View style={styles.container}>\n          <Text style={styles.title}>Cadastrar Produto </Text>\n          <TextInput\n            placeholder=\"Nome do Produto: \"\n            style={styles.textBox}\n            onChangeText={(text) => handleChange(text, \"name\")}\n          />\n\n          <TextInput\n            placeholder=\" Código do Produto: \"\n            style={styles.textBox}\n            onChangeText={(text) => handleChange(text, \"codigo\")}\n            keyboardType=\"numeric\"\n          />\n\n          <TextInput\n            placeholder=\" Fornecedor do Produto: \"\n            style={styles.textBox}\n            onChangeText={(text) => handleChange(text, \"fornecedor\")}\n            \n          />\n\n          <TextInput\n            placeholder=\"Preco do Produto: \"\n            style={styles.textBox}\n            onChangeText={(text) => handleChange(text, \"preco\")}\n            keyboardType=\"numeric\"\n          />\n\n          <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            onPress={addProduto}\n            style={{...styles.button, marginVertical: 0}}\n            >\n              <Text style={styles.buttonText}>Salvar</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n            onPress={closeModal}\n            style={{...styles.button, marginVertical: 0, marginLeft: 10, backgroundColor: \"tomato\"}}\n            >\n              <Text style={styles.buttonText}>Cancelar</Text>\n            </TouchableOpacity>\n          </View>\n\n        </View>\n    </Modal>\n  )\n}\n\nexport default AddProduto"]},"metadata":{},"sourceType":"module"}